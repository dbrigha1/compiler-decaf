/* vim: ft=lex
program2.lpp
Dylan Brigham
Dr. Buckner
9/24/2017*/

%option outfile = "program_lex.cpp"
%option noyywrap
%option yylineno
%{
#include "program.h"
#include <iostream>
%}

SPACE       [ ]+                                                              
TAB         [\t]+                                                            
PUNCTUATION "."|","|"?"|";"|"\""|"\'"|"\("|"\)"|"\["|"\]"|"\{"|"\}"
RELATIONOP  "=="|"!="|"<="|">="|"<"|">"
SUMOP       "+"|"\-"|"||" 
PRODUCTOP   "*"|"/"|"%"|"&&"
UNARYOP     "+"|"\-"|"\!"                           
OPERATOR    "+"|"\-"|"*"|"/"|"%"|"="|"~"                                              
INTEGER     [1-9][0-9]*                                                      
FLOAT       [0-9]+\.[0-9]+ 
SCIENTIFIC  {FLOAT}[eE][+\-]?{INTEGER}
KEYWORD  "int"|"print"|"if"|"void"|"read"|"else"|"class"|"return"|"this"|"new"|"while" 
IDENTIFIER  [_]+?[a-zA-Z][_a-zA-Z0-9]*                                       
NEWLINE     [\n]                                                            
UNKNOWN     .                                                              

%x COMMENT BLOCK_COMMENT ERROR ERROR_WORD
%%

"//"                                      {yyless(0); BEGIN(COMMENT);}
<COMMENT>[^\n]+                           {return 11;} 
<COMMENT>[\n]                             {BEGIN(INITIAL); return 8;}


"/*"                                     {BEGIN(BLOCK_COMMENT); yyless(0); return 11;}
<BLOCK_COMMENT>[\n]                      {Token::_column = 0; return 11; }
<BLOCK_COMMENT>"*/"                      {BEGIN(INITIAL); return 11;}
<BLOCK_COMMENT>.                         {return 11;}


<ERROR>{UNKNOWN}{OPERATOR}|{UNKNOWN}{SPACE}|{UNKNOWN}{TAB}|{UNKNOWN} {BEGIN(INITIAL); yyless(1); return 9;}
<ERROR>{UNKNOWN}{IDENTIFIER}*                                            {BEGIN(ERROR_WORD); return 99;}
<ERROR_WORD>{PUNCTUATION}|{OPERATOR}|{SPACE}|{TAB}|{NEWLINE}         {BEGIN(INITIAL); yyless(0);}


{SPACE}       {return 10;} 
{TAB}         {return 1;}
{PUNCTUATION} {return 2;}
{RELATIONOP}  {return 15;}
{SUMOP}       {return 12;}
{PRODUCTOP}   {return 13;}
{UNARYOP}     {return 14;}
{OPERATOR}    {return 3;}
{INTEGER}     {return 4;}
{FLOAT}       {return 5;}
{SCIENTIFIC}  {return 6;}
{KEYWORD}     {return 16;}
{IDENTIFIER}  {return 7;}
{NEWLINE}     {return 8;}
{UNKNOWN}     {BEGIN(ERROR); yyless(0);}

%%
//user entry
